/**
 * Generated by orval v7.13.0 🍺
 * Do not edit manually.
 * OpenAPI definition
 * OpenAPI spec version: v0
 */
import type {
  ApiResponseListSysMenuTreeVO,
  ApiResponsePageResultSysPermissionVO,
  ApiResponsePageResultSysRolePermissionVO,
  ApiResponsePageResultSysRoleVO,
  ApiResponsePageResultSysUserRoleVO,
  ApiResponsePageResultSysUserVO,
  ApiResponseSysPermissionVO,
  ApiResponseSysRolePermissionVO,
  ApiResponseSysRoleVO,
  ApiResponseSysUserRoleVO,
  ApiResponseSysUserVO,
  ApiResponseVoid,
  DeleteRolePermissionParams,
  DeleteUserRoleParams,
  PagePermissionsParams,
  PageRolePermissionsParams,
  PageRolesParams,
  PageUserRolesParams,
  PageUsersParams,
  SysPermissionCreateRequest,
  SysPermissionUpdateRequest,
  SysRoleCreateRequest,
  SysRolePermissionCreateRequest,
  SysRolePermissionUpdateRequest,
  SysRoleUpdateRequest,
  SysUserCreateRequest,
  SysUserRoleCreateRequest,
  SysUserRoleUpdateRequest,
  SysUserUpdateRequest,
} from '.././models'

import { axiosInstance } from '../../../../axios-instance'

export const getSysController = () => {
  /**
   * 根据用户ID获取详细信息，需要user:account:list权限
   * @summary 获取用户详情
   */
  const getUser = (userId: number) => {
    return axiosInstance<ApiResponseSysUserVO>({ url: `/system/users/${userId}`, method: 'GET' })
  }
  /**
   * 根据用户ID更新基础信息和状态，需要user:account:update权限
   * @summary 更新系统用户
   */
  const updateUser = (userId: number, sysUserUpdateRequest: SysUserUpdateRequest) => {
    return axiosInstance<ApiResponseSysUserVO>({
      url: `/system/users/${userId}`,
      method: 'PUT',
      headers: { 'Content-Type': 'application/json' },
      data: sysUserUpdateRequest,
    })
  }
  /**
   * 根据用户ID删除（逻辑删除）系统用户，需要user:account:delete权限
   * @summary 删除系统用户
   */
  const deleteUser = (userId: number) => {
    return axiosInstance<ApiResponseVoid>({ url: `/system/users/${userId}`, method: 'DELETE' })
  }
  /**
   * 按用户或角色筛选关联关系，需要用户角色为ADMIN
   * @summary 分页查询用户角色关系
   */
  const pageUserRoles = (params?: PageUserRolesParams) => {
    return axiosInstance<ApiResponsePageResultSysUserRoleVO>({
      url: `/system/user-roles`,
      method: 'GET',
      params,
    })
  }
  /**
   * 变更用户绑定的角色，需要用户角色为ADMIN
   * @summary 更新用户角色关系
   */
  const updateUserRole = (sysUserRoleUpdateRequest: SysUserRoleUpdateRequest) => {
    return axiosInstance<ApiResponseSysUserRoleVO>({
      url: `/system/user-roles`,
      method: 'PUT',
      headers: { 'Content-Type': 'application/json' },
      data: sysUserRoleUpdateRequest,
    })
  }
  /**
   * 为用户绑定新的角色，需要用户角色为ADMIN
   * @summary 新增用户角色关系
   */
  const createUserRole = (sysUserRoleCreateRequest: SysUserRoleCreateRequest) => {
    return axiosInstance<ApiResponseSysUserRoleVO>({
      url: `/system/user-roles`,
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      data: sysUserRoleCreateRequest,
    })
  }
  /**
   * 解绑用户已经绑定的角色，需要用户角色为ADMIN
   * @summary 删除用户角色关系
   */
  const deleteUserRole = (params: DeleteUserRoleParams) => {
    return axiosInstance<ApiResponseVoid>({ url: `/system/user-roles`, method: 'DELETE', params })
  }
  /**
   * 根据角色ID查询角色信息，需要用户角色为ADMIN
   * @summary 获取角色详情
   */
  const getRole = (roleId: number) => {
    return axiosInstance<ApiResponseSysRoleVO>({ url: `/system/roles/${roleId}`, method: 'GET' })
  }
  /**
   * 根据角色ID更新角色基础信息，需要用户角色为ADMIN
   * @summary 更新角色
   */
  const updateRole = (roleId: number, sysRoleUpdateRequest: SysRoleUpdateRequest) => {
    return axiosInstance<ApiResponseSysRoleVO>({
      url: `/system/roles/${roleId}`,
      method: 'PUT',
      headers: { 'Content-Type': 'application/json' },
      data: sysRoleUpdateRequest,
    })
  }
  /**
   * 根据角色ID删除系统角色，需要用户角色为ADMIN
   * @summary 删除角色
   */
  const deleteRole = (roleId: number) => {
    return axiosInstance<ApiResponseVoid>({ url: `/system/roles/${roleId}`, method: 'DELETE' })
  }
  /**
   * 按角色或权限筛选关联关系，需要用户角色为ADMIN
   * @summary 分页查询角色权限关系
   */
  const pageRolePermissions = (params?: PageRolePermissionsParams) => {
    return axiosInstance<ApiResponsePageResultSysRolePermissionVO>({
      url: `/system/role-permissions`,
      method: 'GET',
      params,
    })
  }
  /**
   * 变更角色绑定的权限，需要用户角色为ADMIN
   * @summary 更新角色权限关系
   */
  const updateRolePermission = (sysRolePermissionUpdateRequest: SysRolePermissionUpdateRequest) => {
    return axiosInstance<ApiResponseSysRolePermissionVO>({
      url: `/system/role-permissions`,
      method: 'PUT',
      headers: { 'Content-Type': 'application/json' },
      data: sysRolePermissionUpdateRequest,
    })
  }
  /**
   * 为角色绑定新的权限，需要用户角色为ADMIN
   * @summary 新增角色权限关系
   */
  const createRolePermission = (sysRolePermissionCreateRequest: SysRolePermissionCreateRequest) => {
    return axiosInstance<ApiResponseSysRolePermissionVO>({
      url: `/system/role-permissions`,
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      data: sysRolePermissionCreateRequest,
    })
  }
  /**
   * 解绑角色已经绑定的权限，需要用户角色为ADMIN
   * @summary 删除角色权限关系
   */
  const deleteRolePermission = (params: DeleteRolePermissionParams) => {
    return axiosInstance<ApiResponseVoid>({
      url: `/system/role-permissions`,
      method: 'DELETE',
      params,
    })
  }
  /**
   * 根据权限ID查询详细信息，需要用户角色为ADMIN
   * @summary 获取权限详情
   */
  const getPermission = (permissionId: number) => {
    return axiosInstance<ApiResponseSysPermissionVO>({
      url: `/system/permissions/${permissionId}`,
      method: 'GET',
    })
  }
  /**
   * 根据ID更新权限的基础信息，需要用户角色为ADMIN
   * @summary 更新权限或菜单
   */
  const updatePermission = (
    permissionId: number,
    sysPermissionUpdateRequest: SysPermissionUpdateRequest,
  ) => {
    return axiosInstance<ApiResponseSysPermissionVO>({
      url: `/system/permissions/${permissionId}`,
      method: 'PUT',
      headers: { 'Content-Type': 'application/json' },
      data: sysPermissionUpdateRequest,
    })
  }
  /**
   * 根据权限ID删除权限，需要用户角色为ADMIN
   * @summary 删除权限
   */
  const deletePermission = (permissionId: number) => {
    return axiosInstance<ApiResponseVoid>({
      url: `/system/permissions/${permissionId}`,
      method: 'DELETE',
    })
  }
  /**
   * 支持按关键字、状态、类型等维度筛选系统用户，需要user:account:list权限
   * @summary 分页查询系统用户
   */
  const pageUsers = (params?: PageUsersParams) => {
    return axiosInstance<ApiResponsePageResultSysUserVO>({
      url: `/system/users`,
      method: 'GET',
      params,
    })
  }
  /**
   * 创建新的系统用户并返回基础信息，需要user:account:update权限
   * @summary 新增系统用户
   */
  const createUser = (sysUserCreateRequest: SysUserCreateRequest) => {
    return axiosInstance<ApiResponseSysUserVO>({
      url: `/system/users`,
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      data: sysUserCreateRequest,
    })
  }
  /**
   * 支持按角色编码、名称和状态筛选，需要用户角色为ADMIN
   * @summary 分页查询角色
   */
  const pageRoles = (params?: PageRolesParams) => {
    return axiosInstance<ApiResponsePageResultSysRoleVO>({
      url: `/system/roles`,
      method: 'GET',
      params,
    })
  }
  /**
   * 创建新的系统角色，需要用户角色为ADMIN
   * @summary 新增角色
   */
  const createRole = (sysRoleCreateRequest: SysRoleCreateRequest) => {
    return axiosInstance<ApiResponseSysRoleVO>({
      url: `/system/roles`,
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      data: sysRoleCreateRequest,
    })
  }
  /**
   * 支持按名称、类型、状态筛选权限列表，需要用户角色为ADMIN
   * @summary 分页查询权限
   */
  const pagePermissions = (params?: PagePermissionsParams) => {
    return axiosInstance<ApiResponsePageResultSysPermissionVO>({
      url: `/system/permissions`,
      method: 'GET',
      params,
    })
  }
  /**
   * 创建新的权限节点或菜单节点，需要用户角色为ADMIN
   * @summary 新增权限或菜单
   */
  const createPermission = (sysPermissionCreateRequest: SysPermissionCreateRequest) => {
    return axiosInstance<ApiResponseSysPermissionVO>({
      url: `/system/permissions`,
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      data: sysPermissionCreateRequest,
    })
  }
  /**
   * 返回分级菜单结构，便于前端渲染动态路由，需要用户角色为ADMIN
   * @summary 获取当前用户可访问菜单
   */
  const listCurrentUserMenus = () => {
    return axiosInstance<ApiResponseListSysMenuTreeVO>({
      url: `/system/menus/current`,
      method: 'GET',
    })
  }
  return {
    getUser,
    updateUser,
    deleteUser,
    pageUserRoles,
    updateUserRole,
    createUserRole,
    deleteUserRole,
    getRole,
    updateRole,
    deleteRole,
    pageRolePermissions,
    updateRolePermission,
    createRolePermission,
    deleteRolePermission,
    getPermission,
    updatePermission,
    deletePermission,
    pageUsers,
    createUser,
    pageRoles,
    createRole,
    pagePermissions,
    createPermission,
    listCurrentUserMenus,
  }
}
export type GetUserResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getSysController>['getUser']>>
>
export type UpdateUserResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getSysController>['updateUser']>>
>
export type DeleteUserResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getSysController>['deleteUser']>>
>
export type PageUserRolesResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getSysController>['pageUserRoles']>>
>
export type UpdateUserRoleResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getSysController>['updateUserRole']>>
>
export type CreateUserRoleResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getSysController>['createUserRole']>>
>
export type DeleteUserRoleResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getSysController>['deleteUserRole']>>
>
export type GetRoleResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getSysController>['getRole']>>
>
export type UpdateRoleResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getSysController>['updateRole']>>
>
export type DeleteRoleResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getSysController>['deleteRole']>>
>
export type PageRolePermissionsResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getSysController>['pageRolePermissions']>>
>
export type UpdateRolePermissionResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getSysController>['updateRolePermission']>>
>
export type CreateRolePermissionResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getSysController>['createRolePermission']>>
>
export type DeleteRolePermissionResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getSysController>['deleteRolePermission']>>
>
export type GetPermissionResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getSysController>['getPermission']>>
>
export type UpdatePermissionResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getSysController>['updatePermission']>>
>
export type DeletePermissionResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getSysController>['deletePermission']>>
>
export type PageUsersResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getSysController>['pageUsers']>>
>
export type CreateUserResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getSysController>['createUser']>>
>
export type PageRolesResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getSysController>['pageRoles']>>
>
export type CreateRoleResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getSysController>['createRole']>>
>
export type PagePermissionsResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getSysController>['pagePermissions']>>
>
export type CreatePermissionResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getSysController>['createPermission']>>
>
export type ListCurrentUserMenusResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getSysController>['listCurrentUserMenus']>>
>
