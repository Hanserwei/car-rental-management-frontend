/**
 * Generated by orval v7.13.0 🍺
 * Do not edit manually.
 * OpenAPI definition
 * OpenAPI spec version: v0
 */
import type {
  ApiResponseBaseCityVO,
  ApiResponsePageResultBaseCityVO,
  ApiResponseVoid,
  BaseCityCreateRequest,
  BaseCityUpdateRequest,
  PageCitiesParams,
} from '.././models'

import { axiosInstance } from '../../../../axios-instance'

export const getBaseCityController = () => {
  /**
   * 根据城市ID获取详细信息
   * @summary 获取城市详情
   */
  const getCity = (cityId: number) => {
    return axiosInstance<ApiResponseBaseCityVO>({ url: `/base/cities/${cityId}`, method: 'GET' })
  }
  /**
   * 根据ID更新城市信息
   * @summary 更新城市
   */
  const updateCity = (cityId: number, baseCityUpdateRequest: BaseCityUpdateRequest) => {
    return axiosInstance<ApiResponseBaseCityVO>({
      url: `/base/cities/${cityId}`,
      method: 'PUT',
      headers: { 'Content-Type': 'application/json' },
      data: baseCityUpdateRequest,
    })
  }
  /**
   * 删除指定城市，删除前会校验是否存在关联车辆
   * @summary 删除城市
   */
  const deleteCity = (cityId: number) => {
    return axiosInstance<ApiResponseVoid>({ url: `/base/cities/${cityId}`, method: 'DELETE' })
  }
  /**
   * 支持关键字、状态等条件筛选
   * @summary 分页查询城市
   */
  const pageCities = (params?: PageCitiesParams) => {
    return axiosInstance<ApiResponsePageResultBaseCityVO>({
      url: `/base/cities`,
      method: 'GET',
      params,
    })
  }
  /**
   * 创建新的城市记录
   * @summary 新增城市
   */
  const createCity = (baseCityCreateRequest: BaseCityCreateRequest) => {
    return axiosInstance<ApiResponseBaseCityVO>({
      url: `/base/cities`,
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      data: baseCityCreateRequest,
    })
  }
  return { getCity, updateCity, deleteCity, pageCities, createCity }
}
export type GetCityResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getBaseCityController>['getCity']>>
>
export type UpdateCityResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getBaseCityController>['updateCity']>>
>
export type DeleteCityResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getBaseCityController>['deleteCity']>>
>
export type PageCitiesResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getBaseCityController>['pageCities']>>
>
export type CreateCityResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getBaseCityController>['createCity']>>
>
